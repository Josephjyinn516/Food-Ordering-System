/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MainPage;

import Class.Runner;
import Class.Runner_FileHandling;
import Login.Login_Application;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import vendor.pkginterface.assignment.AcceptTask;
import vendor.pkginterface.assignment.PastTasks;
import vendor.pkginterface.assignment.Runners;
import vendor.pkginterface.assignment.TaskInfo;

/**
 *
 * @author user
 */
public class Runner_Page extends javax.swing.JFrame 
{
    //Contents in the tables and text file are derived from the orders file
    
    private Runner runner;
    private ArrayList<Runner> runners;
    
    public Runner_Page(ArrayList<Runner> runners) {
        initComponents();
        
        this.runners = runners;
        System.out.println("Number of runners in Main_Page_Runner constructor: " + runners.size());
        displayRunnerProfile();
    }

    
    private void displayRunnerProfile() {
        System.out.println("Number of Runner in displayRunnerProfile: " + runners.size());

        if (runners != null && !runners.isEmpty()) {
            runner = runners.get(0);
            // Set the values in the text fields
            jTextField1.setText(runner.getPhoneNumber());
            jTextField2.setText(runner.getRunnerName());
            jTextField3.setText(runner.getEmail());

            jTextField4.setText(runner.getPassword());
        } else {
            // Handle the case where no student data is available
            System.out.println("No runner data found.");
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        WelcomeNote = new javax.swing.JLabel();
        LogoutButton = new javax.swing.JButton();
        MainTab = new javax.swing.JPanel();
        ProfilePage = new javax.swing.JPanel();
        ProfilePagelbl = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        Notifications = new javax.swing.JPanel();
        lblTaskNotifications = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        NotificationsTable = new javax.swing.JTable();
        History = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        HistoryTable = new javax.swing.JTable();
        Revenue = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        TotalCredits = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        RevenuesTable = new javax.swing.JTable();
        gotoProfile = new javax.swing.JButton();
        gotoNotifictions = new javax.swing.JButton();
        gotoHistory = new javax.swing.JButton();
        gotoRevenues = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        WelcomeNote.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        WelcomeNote.setText("Welcome Runner! ");

        LogoutButton.setText("Logout");
        LogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutButtonActionPerformed(evt);
            }
        });

        MainTab.setLayout(new java.awt.CardLayout());

        ProfilePagelbl.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        ProfilePagelbl.setText("Profile Page");

        jLabel4.setText("Name");

        jTextField2.setText("jTextField1");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Email");

        jTextField3.setText("jTextField1");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jLabel6.setText("Phone Number");

        jTextField1.setText("jTextField1");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel7.setText("Password");

        jTextField4.setText("jTextField1");
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ProfilePageLayout = new javax.swing.GroupLayout(ProfilePage);
        ProfilePage.setLayout(ProfilePageLayout);
        ProfilePageLayout.setHorizontalGroup(
            ProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProfilePageLayout.createSequentialGroup()
                .addContainerGap(123, Short.MAX_VALUE)
                .addComponent(ProfilePagelbl)
                .addGap(116, 116, 116))
            .addGroup(ProfilePageLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(ProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(ProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField2)
                    .addComponent(jTextField3)
                    .addComponent(jTextField1)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ProfilePageLayout.setVerticalGroup(
            ProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProfilePageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ProfilePagelbl)
                .addGap(18, 18, 18)
                .addGroup(ProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        MainTab.add(ProfilePage, "card2");

        lblTaskNotifications.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTaskNotifications.setText("Task Notifications");

        NotificationsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"001", "Chen", "Block A", "02 : 00"},
                {"002", "Takumi", "Block B", "12 : 30"},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Tasks", "Customer", "Location", "Time"
            }
        ));
        NotificationsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                NotificationsTableMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(NotificationsTable);

        javax.swing.GroupLayout NotificationsLayout = new javax.swing.GroupLayout(Notifications);
        Notifications.setLayout(NotificationsLayout);
        NotificationsLayout.setHorizontalGroup(
            NotificationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NotificationsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(NotificationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                    .addGroup(NotificationsLayout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(lblTaskNotifications)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        NotificationsLayout.setVerticalGroup(
            NotificationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NotificationsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTaskNotifications)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80))
        );

        MainTab.add(Notifications, "card3");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Task History");

        HistoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "TaskID", "Task", "Date", "Time", "Revenue"
            }
        ));
        HistoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                HistoryTableMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(HistoryTable);

        javax.swing.GroupLayout HistoryLayout = new javax.swing.GroupLayout(History);
        History.setLayout(HistoryLayout);
        HistoryLayout.setHorizontalGroup(
            HistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HistoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HistoryLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(150, 150, 150))
        );
        HistoryLayout.setVerticalGroup(
            HistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HistoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        MainTab.add(History, "card4");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setText("Revenue");

        TotalCredits.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        TotalCredits.setText("RM ");

        RevenuesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Month", "Revenue"
            }
        ));
        RevenuesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                RevenuesTableMouseReleased(evt);
            }
        });
        jScrollPane4.setViewportView(RevenuesTable);

        javax.swing.GroupLayout RevenueLayout = new javax.swing.GroupLayout(Revenue);
        Revenue.setLayout(RevenueLayout);
        RevenueLayout.setHorizontalGroup(
            RevenueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RevenueLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RevenueLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(165, 165, 165))
            .addGroup(RevenueLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TotalCredits, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );
        RevenueLayout.setVerticalGroup(
            RevenueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RevenueLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TotalCredits, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        MainTab.add(Revenue, "card5");

        gotoProfile.setText("Profile");
        gotoProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gotoProfileActionPerformed(evt);
            }
        });

        gotoNotifictions.setText("Notifications");
        gotoNotifictions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gotoNotifictionsActionPerformed(evt);
            }
        });

        gotoHistory.setText("History");
        gotoHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gotoHistoryActionPerformed(evt);
            }
        });

        gotoRevenues.setText("Revenue");
        gotoRevenues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gotoRevenuesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(WelcomeNote, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MainTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(gotoProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(gotoNotifictions)
                                .addGap(18, 18, 18)
                                .addComponent(gotoHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(gotoRevenues, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(LogoutButton, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(LogoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(WelcomeNote, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gotoProfile)
                    .addComponent(gotoNotifictions)
                    .addComponent(gotoHistory)
                    .addComponent(gotoRevenues))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MainTab, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutButtonActionPerformed
        this.dispose(); //Go back to the login page
        
        Login_Application la = new Login_Application();
        la.setVisible(true);
    }//GEN-LAST:event_LogoutButtonActionPerformed

    private void gotoProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gotoProfileActionPerformed
        //Data in profile based on the user data from Admin's user file
        MainTab.removeAll();
        MainTab.add(ProfilePage);
        MainTab.repaint();
        MainTab.revalidate();
    }//GEN-LAST:event_gotoProfileActionPerformed

    private void gotoNotifictionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gotoNotifictionsActionPerformed
        MainTab.removeAll();
        MainTab.add(Notifications);
        MainTab.repaint();
        MainTab.revalidate();
        
        // Create an instance of FileIORunner
        Runners runner = new Runners();
        runner.setFileInput("C:\\Users\\user\\Desktop\\Runner (OODJ Assignment)\\OODJ Assignment\\Incoming Tasks.txt");

        // Load the file and get the table model
        DefaultTableModel model;
        model = runner.LoadFile();

        // Set the table model to the NotificationsTable
        NotificationsTable.setModel(model);
    }//GEN-LAST:event_gotoNotifictionsActionPerformed

    private void gotoHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gotoHistoryActionPerformed
        MainTab.removeAll();
        MainTab.add(History);
        MainTab.repaint();
        MainTab.revalidate();

        // Create an instance of FileIORunner
        Runners runner = new Runners(); 
        runner.setFileInput("C:\\Users\\user\\Desktop\\Runner (OODJ Assignment)\\OODJ Assignment\\Task History.txt");

        // Load the file and get the table model
        DefaultTableModel model;
        model = runner.LoadFile();

        // Filter rows for RunnerID of this runner
        model = runner.FilterModel(model);

        // Set the table model to the HistoryTable
        HistoryTable.setModel(model);
        
        // Remove the 'RunnerID' column
        int runnerIdColumnIndex = model.findColumn("RunnerID");
        HistoryTable.removeColumn(HistoryTable.getColumnModel().getColumn(runnerIdColumnIndex));
    }//GEN-LAST:event_gotoHistoryActionPerformed

    private void gotoRevenuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gotoRevenuesActionPerformed
        //The calculate total revenues part has problem
        
        MainTab.removeAll();
        MainTab.add(Revenue);
        MainTab.repaint();
        MainTab.revalidate();
        
        // Create an instance of FileIORunner
        Runners runner = new Runners();
        runner.setFileInput("C:\\Users\\user\\Desktop\\Runner (OODJ Assignment)\\OODJ Assignment\\Revenue.txt");

        // Load the file and get the table model
        DefaultTableModel model;
        model = runner.LoadFile();

        // Filter rows for RunnerID of this runner
        model = runner.FilterModel(model); 

        // Set the table model to the RevenuesTable
        RevenuesTable.setModel(model);
        
        // Remove the 'RunnerID' column
        int runnerIdColumnIndex = model.findColumn("RunnerID");
        RevenuesTable.removeColumn(RevenuesTable.getColumnModel().getColumn(runnerIdColumnIndex));
        
        // Calculate total revenue
        double totalRevenue = 0.0;
        int revenueColumnIndex = model.findColumn("Revenue");

        for (int row = 1; row < model.getRowCount(); row++) {
            double revenue = (double) model.getValueAt(row, revenueColumnIndex);
            totalRevenue += revenue;
        }
        
        //Calculate total credit
        double credits = runner.CalculateCredit(totalRevenue);
        
        TotalCredits.setText("Total Credits: RM " + String.format("%.2f", credits));
    }//GEN-LAST:event_gotoRevenuesActionPerformed

    private void NotificationsTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NotificationsTableMouseReleased
        // Get the selected row index
        int selectedRow = NotificationsTable.getSelectedRow();

        // Ensure a row is selected
        if (selectedRow != -1) {
            // Extract data from the selected row
            String Task_ID = (String) NotificationsTable.getValueAt(selectedRow, 0);
            String vendorID = (String) NotificationsTable.getValueAt(selectedRow, 1);
            String orders = (String) NotificationsTable.getValueAt(selectedRow, 2);
            String customerName = (String) NotificationsTable.getValueAt(selectedRow, 3); 
            String location = (String) NotificationsTable.getValueAt(selectedRow, 4);
            String date = (String) NotificationsTable.getValueAt(selectedRow, 5);
            String time = (String) NotificationsTable.getValueAt(selectedRow, 6);

            // Create an instance of TaskInfo
            TaskInfo openTasks = new TaskInfo();
        
            openTasks.setTaskID(Task_ID);
            openTasks.setVendorID(vendorID);
            openTasks.setOrders(orders);
            openTasks.setCustomerName(customerName);
            openTasks.setLocation(location);
            openTasks.setDate(date);
            openTasks.setTime(time);

             // Create and show the custom dialog Accept
            AcceptTask accept = new AcceptTask("Confirmation", "Accept Task?");
            accept.setVisible(true);
            
            // Check the result of the user's choice
            switch (accept.getResult()) {
                case JOptionPane.OK_OPTION -> {// Accept
                    DefaultTableModel model = (DefaultTableModel) NotificationsTable.getModel();
                    model.removeRow(selectedRow);
                    openTasks.setVisible(true);
                    
                    // Update the text file
                    Runners runner = new Runners();
                    runner.setFileInput("C:\\Users\\user\\Desktop\\Runner (OODJ Assignment)\\OODJ Assignment\\Incoming Tasks.txt");
                    runner.NotificationsFile(model);
                }
                case JOptionPane.CANCEL_OPTION -> {
                }
                case JOptionPane.NO_OPTION -> {
                    // Decline
                    // Delete the selected row information
                    // For example, you can use the DefaultTableModel to remove the row
                    DefaultTableModel model = (DefaultTableModel) NotificationsTable.getModel();
                    model.removeRow(selectedRow);
                }
                default -> {
                }
            }
            
            
        }
    }//GEN-LAST:event_NotificationsTableMouseReleased

    private void HistoryTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HistoryTableMouseReleased
        // Get the selected row index
        int selectedRow = HistoryTable.getSelectedRow();

        // Ensure a row is selected
        if (selectedRow != -1) {
            // Extract data from the selected row
            String Task_ID = (String) HistoryTable.getValueAt(selectedRow, 0);
            String customerName = (String) HistoryTable.getValueAt(selectedRow, 1);
            String location = (String) HistoryTable.getValueAt(selectedRow, 2);
            String vendorID = (String) HistoryTable.getValueAt(selectedRow, 3);
            String orders = (String) HistoryTable.getValueAt(selectedRow, 4);
            String date = (String) HistoryTable.getValueAt(selectedRow, 5);
            String time = (String) HistoryTable.getValueAt(selectedRow, 6);
            String revenue = (String) HistoryTable.getValueAt(selectedRow, 7);
            String review = (String) HistoryTable.getValueAt(selectedRow, 8);

            // Create an instance of PastTasks
            PastTasks openPastTasks = new PastTasks();
        
            // Set the labels' text in PastTasks
            openPastTasks.setTaskID(Task_ID);
            openPastTasks.setCustomerName(customerName);
            openPastTasks.setLocation(location);
            openPastTasks.setVendorID(vendorID);
            openPastTasks.setOrders(orders);
            openPastTasks.setDate(date);
            openPastTasks.setTime(time);
            openPastTasks.setRevenue(revenue);
            openPastTasks.setReview(review);

            // Make the PastTasks frame visible
            openPastTasks.setVisible(true);
        }
    }//GEN-LAST:event_HistoryTableMouseReleased

    private void RevenuesTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RevenuesTableMouseReleased
        
    }//GEN-LAST:event_RevenuesTableMouseReleased

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
        //Name
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
        //Email
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        //Phone
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
        //Password
    }//GEN-LAST:event_jTextField4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Runner_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Runner_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Runner_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Runner_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                String filePath = "C:/Users/User/Documents/NetBeansProjects/Java Assignment/Runner Profile.txt";
                ArrayList<Runner> runners = Runner_FileHandling.readRunnerData(filePath);

                System.out.println("Number of runners read: " + runners.size()); // Debug statement

                new Runner_Page(runners).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel History;
    private javax.swing.JTable HistoryTable;
    private javax.swing.JButton LogoutButton;
    private javax.swing.JPanel MainTab;
    private javax.swing.JPanel Notifications;
    private javax.swing.JTable NotificationsTable;
    private javax.swing.JPanel ProfilePage;
    private javax.swing.JLabel ProfilePagelbl;
    private javax.swing.JPanel Revenue;
    private javax.swing.JTable RevenuesTable;
    private javax.swing.JLabel TotalCredits;
    private javax.swing.JLabel WelcomeNote;
    private javax.swing.JButton gotoHistory;
    private javax.swing.JButton gotoNotifictions;
    private javax.swing.JButton gotoProfile;
    private javax.swing.JButton gotoRevenues;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JLabel lblTaskNotifications;
    // End of variables declaration//GEN-END:variables
}
